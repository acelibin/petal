(function() {
  var $, api_base, append_com, authorize, client_id, err, load_comments, load_footer, load_reply, marked, petal, post_reply, proxy_url, render_body, test_token, test_un_reply;

  $ = jQuery;

  $.support.cors = true;

  api_base = "https://api.github.com/repos/";

  client_id = "2ae54488ab61bc732407";

  proxy_url = "http://petal.ap01.aws.af.cm";

  marked = require("marked");

  petal = {
    repo: "user/repo",
    issue_id: 1,
    init: function(repo, issue_id) {
      this.repo = repo;
      this.issue_id = issue_id;
      this.api_url = api_base + this.repo + "/issues/" + this.issue_id + "/comments";
      $(".petal").append("<div class=\"comments\"></div><div class=\"reply\" ></div><div class=\"footer\"></div>");
      load_reply();
      load_footer();
      load_comments();
      test_token();
      return test_un_reply();
    }
  };

  $.petal = petal;

  load_footer = function() {
    return $(".petal .footer").html("By <a href=\"https://github.com/hit9/petal\">petal</a>");
  };

  render_body = function(com_body) {
    var str;
    str = marked(com_body);
    return str.replace(/\B@([\w-]+) /gm, "<a href=\"https://github.com/$1\" target=\"_blank\">@$1 </a>");
  };

  append_com = function(com) {
    return $(".petal .comments ul").append("      <li>        <div class=\"user\">          <img src=\"https://secure.gravatar.com/avatar/" + com.user.gravatar_id + "?s=50\" />          <a class=\"username\" href=\"https://github.com/" + com.user.login + "\" >" + com.user.login + "</a>        </div>        <div class=\"content\">          <div class=\"body\" >" + render_body(com.body) + "</div>          <p class=\"date\">" + com.updated_at.slice(0, 10) + "</p>        </div>      </li>  ");
  };

  load_comments = function() {
    return $.getJSON(petal.api_url + "?callback=?", function(response) {
      var com, comments, _i, _len, _results;
      comments = response.data;
      $(".petal .comments").append("<ul></ul>");
      _results = [];
      for (_i = 0, _len = comments.length; _i < _len; _i++) {
        com = comments[_i];
        _results.push(append_com(com));
      }
      return _results;
    });
  };

  load_reply = function() {
    $(".petal .reply").append("    <p class=\"note\">* Require Github account.<a id=\"gfm-help\" href=\"http://github.github.com/github-flavored-markdown\">GitHub Flavored Markdown</a></p>    <p class=\"err\"></p>    <textarea id=\"petal-textarea\"></textarea>    <p class=\"note\" >Press Ctrl+Enter to post your comment.</p>  ");
    return $("#petal-textarea").keydown(function(e) {
      var content;
      if (e.keyCode === 10 || e.keyCode === 13 && e.ctrlKey) {
        content = $("#petal-textarea").val();
        if (content) {
          return post_reply(content);
        } else {
          return err("Comment field was blank");
        }
      }
    });
  };

  post_reply = function(content) {
    var storage, token;
    storage = window.localStorage;
    token = storage.getItem("petaltoken");
    if (token === null) {
      storage.setItem("petal_un_reply", content);
      return authorize();
    }
    return $.ajax({
      type: "post",
      url: petal.api_url,
      dataType: "json",
      data: JSON.stringify({
        'body': content
      }),
      headers: {
        Authorization: "token " + token,
        Accept: 'application/json'
      },
      success: function(response, status, jqXHR) {
        var un_reply;
        un_reply = storage.getItem("petal_un_reply");
        if (un_reply) {
          storage.removeItem("petal_un_reply");
        }
        append_com(response);
        return $("#petal-textarea").val("");
      },
      error: function(jqXHR, error, errorThrown) {
        if (jqXHR.status && jqXHR.status === 401) {
          storage.setItem("petal_un_reply", content);
          return authorize();
        } else {
          return err("Something wrong");
        }
      }
    });
  };

  authorize = function() {
    var authorize_url, _url;
    authorize_url = "https://github.com/login/oauth/authorize";
    _url = authorize_url + "?client_id=" + client_id + "&scope=public_repo,user&redirect_uri=" + proxy_url + "/?callback=" + url();
    return window.location.replace(_url);
  };

  test_un_reply = function() {
    var un_reply;
    un_reply = window.localStorage.getItem("petal_un_reply");
    if (un_reply) {
      return post_reply(un_reply);
    }
  };

  test_token = function() {
    var storage, token;
    token = url("?petaltoken");
    if (token) {
      token = token.replace(/^\/|\/$/g, '');
      storage = window.localStorage;
      storage.setItem("petaltoken", token);
      return window.history.pushState("", document.title, removeParameter(url(), "petaltoken"));
    }
  };

  err = function(msg) {
    $(".petal .err").text(msg);
    $(".petal .err").show();
    return $(".petal .err").delay(7000).fadeOut(300);
  };

}).call(this);

// Generated by CoffeeScript 1.5.0-pre
